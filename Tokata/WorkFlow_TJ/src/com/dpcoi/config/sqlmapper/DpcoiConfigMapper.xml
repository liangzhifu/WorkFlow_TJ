<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dpcoiConfigMapper" >
    <resultMap id="BaseResultMap" type="DpcoiConfig" >
        <id column="config_id" property="configId" jdbcType="INTEGER" />
        <result column="config_value" property="configValue" jdbcType="VARCHAR" />
        <result column="config_code_id" property="configCodeId" jdbcType="INTEGER" />
        <result column="delete_state" property="deleteState" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Base_Column_List" >
        config_id, config_value, config_code_id, delete_state
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from dpcoi_config
        where config_id = #{configId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from dpcoi_config
        where config_id = #{configId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="DpcoiConfig" >
        insert into dpcoi_config (config_id, config_value, config_code_id,
        delete_state)
        values (#{configId,jdbcType=INTEGER}, #{configValue,jdbcType=VARCHAR}, #{configCodeId,jdbcType=INTEGER},
        #{deleteState,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="DpcoiConfig" >
        insert into dpcoi_config
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="configValue != null" >
                config_value,
            </if>
            <if test="configCodeId != null" >
                config_code_id,
            </if>
            <if test="deleteState != null" >
                delete_state,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="configValue != null" >
                #{configValue,jdbcType=VARCHAR},
            </if>
            <if test="configCodeId != null" >
                #{configCodeId,jdbcType=INTEGER},
            </if>
            <if test="deleteState != null" >
                #{deleteState,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="DpcoiConfig" >
        update dpcoi_config
        <set >
            <if test="configValue != null" >
                config_value = #{configValue,jdbcType=VARCHAR},
            </if>
            <if test="configCodeId != null" >
                config_code_id = #{configCodeId,jdbcType=INTEGER},
            </if>
            <if test="deleteState != null" >
                delete_state = #{deleteState,jdbcType=VARCHAR},
            </if>
        </set>
        where config_id = #{configId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="DpcoiConfig" >
        update dpcoi_config
        set config_value = #{configValue,jdbcType=VARCHAR},
        config_code_id = #{configCodeId,jdbcType=INTEGER},
        delete_state = #{deleteState,jdbcType=VARCHAR}
        where config_id = #{configId,jdbcType=INTEGER}
    </update>

    <sql id="WHERE_SQL">
        <where>
            config.`config_code_id` = cc.`config_code_id`
            AND config.`delete_state` = '0'
            <if test="configCodeId != null and configCodeId != ''">
                and config.config_code_id = #{configCodeId,jdbcType=INTEGER}
            </if>
        </where>
    </sql>

    <select id="selectDpcoiConfigCount" resultType="java.lang.Integer" parameterType="DpcoiConfigQuery">
        SELECT count(1)
        FROM dpcoi_config config, dpcoi_config_code cc
        <include refid="WHERE_SQL"></include>
    </select>

    <select id="selectDpcoiConfigListPage" resultType="java.util.HashMap" parameterType="DpcoiConfigQuery">
        SELECT config.`config_id` AS configId,
        config.`config_value` AS configValue,
        config.`config_code_id` AS configCodeId,
        cc.`config_code_name` AS configCodeName
        FROM dpcoi_config config, dpcoi_config_code cc
        <include refid="WHERE_SQL"></include>
        order by config.`config_code_id`, config.`config_value`
        limit #{start},#{size}
    </select>

    <select id="selectDpcoiConfigList" resultType="java.util.HashMap" parameterType="DpcoiConfigQuery">
        SELECT config.`config_id` AS configId,
        config.`config_value` AS configValue,
        config.`config_code_id` AS configCodeId,
        cc.`config_code_name` AS configCodeName
        FROM dpcoi_config config, dpcoi_config_code cc
        <include refid="WHERE_SQL"></include>
        order by config.`config_code_id`, config.`config_value`
    </select>
</mapper>